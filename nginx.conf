# Configuración de NGINX para el blog Node.js
# Este archivo debe ser incluido en la configuración principal de NGINX

server {
    listen 80;
    server_name tu-dominio.com;  # Cambiar por el dominio real
    
    # Configuración de seguridad básica
    server_tokens off;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Configuración de archivos estáticos
    location /resources/ {
        alias /ruta/al/proyecto/frontend/resources/;  # Cambiar por la ruta real
        
        # Configuración de cache para recursos estáticos
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Configuración de seguridad para archivos estáticos
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Denegar acceso a archivos sensibles
        location ~* \.(php|asp|aspx|jsp|cgi|pl|py|rb|sh|bat|exe|dll)$ {
            deny all;
        }
        
        # Denegar acceso a archivos de configuración
        location ~* \.(htaccess|htpasswd|ini|log|conf|config)$ {
            deny all;
        }
    }
    
    # Configuración para archivos JavaScript
    location /js/ {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache específico para JavaScript
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
    }
    
    # Proxy para el backend Node.js
    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuración para WebSockets si es necesario
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Configuración específica para API
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No cache para API
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Configuración de límites de tamaño de archivo
    client_max_body_size 10M;
    
    # Configuración de compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Configuración de logs
    access_log /var/log/nginx/blog_access.log;
    error_log /var/log/nginx/blog_error.log;
    
    # Configuración de seguridad adicional
    # Denegar acceso a archivos sensibles
    location ~ /\. {
        deny all;
    }
    
    # Denegar acceso a archivos de backup
    location ~* \.(bak|backup|old|orig|save|swp|tmp)$ {
        deny all;
    }
    
    # Configuración para favicon
    location = /favicon.ico {
        alias /ruta/al/proyecto/frontend/resources/favicon.ico;  # Cambiar por la ruta real
        expires 1y;
        add_header Cache-Control "public, immutable";
        log_not_found off;
    }
}

# Configuración HTTPS (recomendada para producción)
server {
    listen 443 ssl http2;
    server_name tu-dominio.com;  # Cambiar por el dominio real
    
    # Configuración SSL (ajustar según certificados)
    ssl_certificate /ruta/al/certificado.crt;
    ssl_certificate_key /ruta/a/la/clave.key;
    
    # Configuración SSL moderna
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Incluir la misma configuración del servidor HTTP
    include /etc/nginx/sites-available/blog-http.conf;  # Crear archivo separado con la configuración común
}

# Redirección HTTP a HTTPS
server {
    listen 80;
    server_name tu-dominio.com;  # Cambiar por el dominio real
    return 301 https://$server_name$request_uri;
}